const path = require("path");
const HtmlWebpackPlugin = require("html-webpack-plugin");
const MiniCssExtractPlugin = require("mini-css-extract-plugin");

module.exports = (env) => {
  return {
    mode: env.production ? "production" : "development",
    // Source file we have written
    entry: "./src/js/index.js",
    output: {
      // File that will be generated by Webpack
      filename: "main.js",
      path: path.resolve(__dirname, "dist"),
      clean: true,
    },
    module: {
      rules: [
        {
          // Used to transpile JS files
          test: /\.m?js$/,
          exclude: /(node_modules)/,
          use: {
            loader: "babel-loader",
            options: {
              presets: ["@babel/preset-env"],
            },
          },
        },
        {
          // Used to extract CSS
          test: /\.css$/i,
          use: [MiniCssExtractPlugin.loader, "css-loader"],
        },
        {
          // Used to support sass files
          test: /\.s[ac]ss$/i,
          use: [MiniCssExtractPlugin.loader, "css-loader", "sass-loader"],
        },
        {
          // Used to support JPG files
          test: /\.jpg/,
          type: "asset/resource",
        },
        {
          // Used to support fonts
          test: /\.(woff|woff2|eot|ttf|otf)$/i,
          type: "asset/resource",
        },
      ],
    },
    plugins: [
      // Generate the HTML file at build time based on the template
      new HtmlWebpackPlugin({
        template: path.resolve(__dirname, "./src/index.html"),
        filename: "index.html",
      }),
      new MiniCssExtractPlugin({
        filename: "[name].css",
      }),
    ],
    // Webpack Server: run "start" script to start server
    devServer: {
      static: {
        directory: path.join(__dirname, "dist"),
      },
      compress: true,
      port: 8080,
    },
  };
};
